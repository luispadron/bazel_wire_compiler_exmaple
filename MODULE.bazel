"""Defines the Cash iOS Bazel workspace and external dependencies."""

module(
    name = "bazel_wire_compiler_example",
    version = "0",
    bazel_compatibility = [">=6.5.0"],
    compatibility_level = 1,
)

# skylib includes general purposes rules and functions.
# https://registry.bazel.build/modules/bazel_skylib
bazel_dep(
    name = "bazel_skylib",
    version = "1.5.0",
)

# apple_support includes rules and macros used by rules_swift and rules_apple
# https://registry.bazel.build/modules/apple_support
bazel_dep(
    name = "apple_support",
    version = "1.12.0",
    repo_name = "build_bazel_apple_support",
)

# rules_protos provides rules for making protocol buffer targets.
# https://registry.bazel.build/modules/rules_protos
bazel_dep(
    name = "rules_proto",
    version = "6.0.0-rc2",
)

# rules_swift includes all the rules required to build Swift targets.
# https://registry.bazel.build/modules/rules_swift
bazel_dep(
    name = "rules_swift",
    version = "1.16.0",
    repo_name = "build_bazel_rules_swift",
)
git_override(
    module_name = "rules_swift",
    commit = "816fa48b4317b401487c37479cc0b749e16bb907",  #  https://github.com/bazelbuild/rules_swift/pull/1140
    remote = "https://github.com/AttilaTheFun/rules_swift.git",
)

# rules_jvm_external provides rules for managing JVM dependencies.
# https://registry.bazel.build/modules/rules_jvm_external
bazel_dep(name = "rules_jvm_external", version = "5.3")

# Configure Apple CC toolchains
apple_cc_configure = use_extension("@build_bazel_apple_support//crosstool:setup.bzl", "apple_cc_configure_extension")
use_repo(apple_cc_configure, "local_config_apple_cc")
